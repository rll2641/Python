heapq 모듈은 이진 트리 기반의 최소 힙 자료구조를 제공한다.
heapq 모듈은 보통 리스트를 최소 힙처럼 다룰 수 있도록 도와주기에, 
heapq 모듈의 함수를 호출할 때 마다 리스트를 인자로 넣어주어야 한다.

heqpq 모듈은 최소 힙의 기능만을 동작하기에 최대 힙으로 활용하려면 튜플을 원소로 추가해주어야 한다.
튜플내에서 맨 앞에 있는 값을 기준으로 최소 힙이 구성되는 원리를 이용하는 것 -> (우선순위, 값)

ex)
nums = [4, 1, 7, 3, 8, 5]

for n in nums:
    heapq.heappush(heap, (-num, num)) -> (우선순위, 값)

힙 원소 추가
heapq 모듈의 heappush() 함수를 이용해 힙에 원소를 추가할 수 있다. (리스트, 원소)
heappush() 함수는 O(logN)의 시간 복잡도를 가진다.

힙 원소 추출
heapq 모듈의 heappop() 함수를 이용해 원소를 추출할 수 있다. (리스트)
heappop() 함수는 O(logN)의 시간 복잡도를 가진다.

기존 리스트를 힙으로 변환
heapq 모듈의 heapify() 함수를 이용해 리스트를 최소 힙으로 만들 수 있다. (리스트)
heapify() 함수에 리스트를 넘길 시, 최소 힙에 맞춰 원소들이 재구성 되며, 
최소값이 인덱스0에 위치하게 된다. heapify() 함수는 O(N)의 시간 복잡도를 가진다.
